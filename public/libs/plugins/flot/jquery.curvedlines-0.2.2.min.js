define(function(){return function($){
(function(a){var b={series:{curvedLines:{active:false,show:false,fit:false,lineWidth:2,curvePointFactor:20,fitPointDist:1e-4,fill:false,fillColor:null}}};function c(g){g.hooks.processOptions.push(c);function c(b,a){a.series.curvedLines.active&&b.hooks.draw.push(f)}function f(g,f){for(var c,l=g.getAxes(),k=g.getData(),j=g.getPlotOffset(),i=0;i<k.length;i++){c=k[i];if(c.curvedLines.show&&c.curvedLines.lineWidth>0){axisx=l.xaxis;axisy=l.yaxis;f.save();f.translate(j.left,j.top);f.lineJoin="round";f.strokeStyle=c.color;f.lineWidth=c.curvedLines.lineWidth;var m=b(c.data,c.curvedLines);c.datapoints.points=m;e(f,c.datapoints.points,axisx,axisy);if(typeof c.curvedLines.fill=="number"&&c.curvedLines.fill==1||c.curvedLines.fill==true){var h=c.curvedLines.fillColor?a.color.parse(c.curvedLines.fillColor):a.color.parse(c.color);h.a=typeof c.curvedLines.fill=="number"?c.curvedLines.fill:.4;h.normalize();f.fillStyle=h.toString();d(f,c.datapoints,axisx,axisy)}f.restore()}}}function e(i,h,e,f){var j=2,k=null,l=null;i.beginPath();for(var g=j;g<h.length;g+=j){var a=h[g-j],b=h[g-j+1],c=h[g],d=h[g+1];if(a==null||c==null)continue;if(b<=d&&b<f.min){if(d<f.min)continue;a=(f.min-b)/(d-b)*(c-a)+a;b=f.min}else if(d<=b&&d<f.min){if(b<f.min)continue;c=(f.min-b)/(d-b)*(c-a)+a;d=f.min}if(b>=d&&b>f.max){if(d>f.max)continue;a=(f.max-b)/(d-b)*(c-a)+a;b=f.max}else if(d>=b&&d>f.max){if(b>f.max)continue;c=(f.max-b)/(d-b)*(c-a)+a;d=f.max}if(a<=c&&a<e.min){if(c<e.min)continue;b=(e.min-a)/(c-a)*(d-b)+b;a=e.min}else if(c<=a&&c<e.min){if(a<e.min)continue;d=(e.min-a)/(c-a)*(d-b)+b;c=e.min}if(a>=c&&a>e.max){if(c>e.max)continue;b=(e.max-a)/(c-a)*(d-b)+b;a=e.max}else if(c>=a&&c>e.max){if(a>e.max)continue;d=(e.max-a)/(c-a)*(d-b)+b;c=e.max}(a!=k||b!=l)&&i.moveTo(e.p2c(a),f.p2c(b));k=c;l=d;i.lineTo(e.p2c(c),f.p2c(d))}i.stroke()}function d(g,p,e,a){for(var k=p.points,m=p.pointsize,n=Math.min(Math.max(0,a.min),a.max),h,l=0,j=false,i=m;i<k.length;i+=m){var b=k[i-m],c=k[i-m+1],d=k[i],f=k[i+1];if(j&&b!=null&&d==null){g.lineTo(e.p2c(l),a.p2c(n));g.fill();j=false;continue}if(b==null||d==null)continue;if(b<=d&&b<e.min){if(d<e.min)continue;c=(e.min-b)/(d-b)*(f-c)+c;b=e.min}else if(d<=b&&d<e.min){if(b<e.min)continue;f=(e.min-b)/(d-b)*(f-c)+c;d=e.min}if(b>=d&&b>e.max){if(d>e.max)continue;c=(e.max-b)/(d-b)*(f-c)+c;b=e.max}else if(d>=b&&d>e.max){if(b>e.max)continue;f=(e.max-b)/(d-b)*(f-c)+c;d=e.max}if(!j){g.beginPath();g.moveTo(e.p2c(b),a.p2c(n));j=true}if(c>=a.max&&f>=a.max){g.lineTo(e.p2c(b),a.p2c(a.max));g.lineTo(e.p2c(d),a.p2c(a.max));l=d;continue}else if(c<=a.min&&f<=a.min){g.lineTo(e.p2c(b),a.p2c(a.min));g.lineTo(e.p2c(d),a.p2c(a.min));l=d;continue}var q=b,o=d;if(c<=f&&c<a.min&&f>=a.min){b=(a.min-c)/(f-c)*(d-b)+b;c=a.min}else if(f<=c&&f<a.min&&c>=a.min){d=(a.min-c)/(f-c)*(d-b)+b;f=a.min}if(c>=f&&c>a.max&&f<=a.max){b=(a.max-c)/(f-c)*(d-b)+b;c=a.max}else if(f>=c&&f>a.max&&c<=a.max){d=(a.max-c)/(f-c)*(d-b)+b;f=a.max}if(b!=q){if(c<=a.min)h=a.min;else h=a.max;g.lineTo(e.p2c(q),a.p2c(h));g.lineTo(e.p2c(b),a.p2c(h))}g.lineTo(e.p2c(b),a.p2c(c));g.lineTo(e.p2c(d),a.p2c(f));if(d!=o){if(f<=a.min)h=a.min;else h=a.max;g.lineTo(e.p2c(d),a.p2c(h));g.lineTo(e.p2c(o),a.p2c(h))}l=Math.max(d,o)}if(j){g.lineTo(e.p2c(l),a.p2c(n));g.fill()}}function b(d,p){var u=p.curvePointFactor*d.length,c=[],e=[];if(p.fit)for(var o=p.fitPointDist,b=0,a=0;a<d.length;a++){c[b]=d[a][0]-.01;if(a>0)e[b]=d[a-1][1]*o+d[a][1]*(1-o);else e[b]=d[a][1];b++;c[b]=d[a][0];e[b]=d[a][1];b++;c[b]=d[a][0]+.01;if(a+1<d.length)e[b]=d[a+1][1]*o+d[a][1]*(1-o);else e[b]=d[a][1];b++}else for(var a=0;a<d.length;a++){c[a]=d[a][0];e[a]=d[a][1]}var n=c.length,f=[],j=[];f[0]=0;f[n-1]=0;j[0]=0;for(var a=1;a<n-1;++a){var v=c[a+1]-c[a-1];if(v==0)return null;var t=(c[a]-c[a-1])/v,w=t*f[a-1]+2;f[a]=(t-1)/w;j[a]=(e[a+1]-e[a])/(c[a+1]-c[a])-(e[a]-e[a-1])/(c[a]-c[a-1]);j[a]=(6*j[a]/(c[a+1]-c[a-1])-t*j[a-1])/w}for(var b=n-2;b>=0;--b)f[b]=f[b]*f[b+1]+j[b];var x=(c[n-1]-c[0])/(u-1),g=[],r=[],q=[];g[0]=c[0];r[0]=e[0];for(b=1;b<u;++b){g[b]=g[0]+b*x;var h=n-1,i=0;while(h-i>1){var s=Math.round((h+i)/2);if(c[s]>g[b])h=s;else i=s}var m=c[h]-c[i];if(m==0)return null;var k=(c[h]-g[b])/m,l=(g[b]-c[i])/m;r[b]=k*e[i]+l*e[h]+((k*k*k-k)*f[i]+(l*l*l-l)*f[h])*(m*m)/6;q.push(g[b]);q.push(r[b])}return q}}a.plot.plugins.push({init:c,options:b,name:"curvedLines",version:"0.2.2"})})(jQuery)
}});